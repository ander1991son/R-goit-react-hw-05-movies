{"version":3,"file":"static/js/888.930185f0.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst Casta = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  const fetchMovieCast = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error al obtener el reparto de la película:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieCast();\n  }, [fetchMovieCast]);\n\n  return (\n    <div>\n      <h2>Reparto</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <div>\n              {actor.profile_path && (\n                <img\n                  width=\"100px\"\n                  height=\"100px\"\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}\n            </div>\n            <strong>{actor.name}</strong>\n            <div>{actor.character}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Casta;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"Movieimg\":\"MovieDetails_Movieimg__b5I7x\",\"movieinfo\":\"MovieDetails_movieinfo__EAEuS\",\"movietext\":\"MovieDetails_movietext__1dWZz\",\"movienavlink\":\"MovieDetails_movienavlink__Av-9Y\"};","import React, { useState, useEffect } from 'react';\nimport css from './MovieDetails.module.css';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {\n  useParams,\n  NavLink,\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: red;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error al obtener detalles de la película:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  //   const fetchMovieDetails = useCallback(async () => {\n  //     try {\n  //       const response = await axios.get(\n  //         `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n  //       );\n  //       setMovieDetails(response.data);\n  //     } catch (error) {\n  //       console.error('Error al obtener detalles de la película:', error);\n  //     }\n  //   }, [movieId]);\n\n  //   useEffect(() => {\n  //     fetchMovieDetails();\n  //   }, [fetchMovieDetails]);\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Go Back</button>\n      <div className={css.movieDetails}>\n        <div>\n          {movieDetails.poster_path && (\n            <img\n              className={css.Movieimg}\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          )}\n        </div>\n        <div className={css.movieinfo}>\n          <h2>{`${movieDetails.title} (${\n            movieDetails.release_date ? movieDetails.release_date : 'N/A'\n          })`}</h2>\n          <p className={css.movietext}>\n            <strong>User Score:</strong> {movieDetails.vote_average}\n          </p>\n          <p className={css.movietext}>\n            <strong>Overview:</strong> <br />\n            {movieDetails.overview}\n          </p>\n          <p className={css.movietext}>\n            <strong>Genres: </strong>\n            <br />\n            {movieDetails.genres &&\n              movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n\n      <div>\n        <ul className={css.movienavlink}>\n          <h2>Additional Information</h2>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </ul>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Outlet } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await axios.get(\n          `${API_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error('Error al obtener reseñas de la película:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reseñas</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>no hay reseñas</p>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","fetchMovieCast","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","useEffect","_jsxs","children","_jsx","map","actor","profile_path","width","height","src","alt","name","character","id","StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","movieDetails","setMovieDetails","navigate","useNavigate","fetchMovieDetails","_ref","apply","arguments","onClick","className","css","poster_path","title","release_date","vote_average","overview","genres","genre","join","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchMovieReviews","results","length","review","content","Outlet"],"sourceRoot":""}